openapi: 3.0.3
info:
  title: Swagger Telemedicina - OpenAPI 3.0
  version: 0.0.1
servers:
  - url: http://localhost:3000/
tags:
  - name: user
    description: Everything about user
  - name: login
    description: Access to app
paths:
  /register:
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a new user to the database based on role
      operationId: addUser
      requestBody:
        description: Add a new user to the database based on role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /login:
    post:
      tags:
        - user
      summary: Login user
      description: Login user to app
      requestBody:
        description: Login user to app
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/xml:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
            application/xml:
              schema:
                $ref: '#/components/schemas/Login'
        '404':
          description: Usuario No Encontrado
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /auth/status:
    get:
      tags:
        - user
      summary: Authenticated user status
      description: Get the status of an authenticated user on the server
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authentication'
        '404':
          description: Usuario No Encontrado
        '400':
          description: Invalid input
        '422':
          description: Validation exception
components:
  schemas:
    User:
      type: object
      properties:
        nro_documento:
          type: integer
          format: int64
          example: 123456789
        nombre:
          type: string
          example: Jorge
        apellido:
          type: string
          example: Perez
        genero:
          type: string
          enum:
            - Masculino
            - Femenino
          example: Masculino
        fecha_nacimiento:
          type: string
          example: 05-04-2000
        email:
          type: string
          example: example@email.com
        password:
          type: string
          example: '12345'
        repeat_password:
          type: string
          example: '12345'
        rol:
          type: string
          enum:
            - paciente
            - medico
            - admin
          example: paciente
        nacionalidad:
          type: string
          example: Chilena
        tipo_documento:
          type: string
          example: DNI
        telefono:
          type: string
          example: '+56936522365'
        direccion:
          type: string
          example: Los Lagos 1520
    Login:
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: '12345'
    Authentication:
      type: object
      properties:
        authenticated:
          type: boolean
          example: true
